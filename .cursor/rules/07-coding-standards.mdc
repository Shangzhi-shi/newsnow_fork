---
description: 
globs: 
alwaysApply: true
---
# NewsNow 编码规范和最佳实践

## 一般准则

### 命名规范
- 组件和类: PascalCase (如 `NewsCard.tsx`)
- 函数和变量: camelCase (如 `fetchData`)
- 常量: UPPER_SNAKE_CASE (如 `MAX_RETRY_COUNT`)
- 文件名: kebab-case 或根据框架约定 (如 `news-card.tsx`)

### 代码组织
- 按功能分组文件和目录
- 保持模块职责单一
- 避免过大的文件，推荐拆分为多个小模块
- 共享逻辑抽取为 Hooks 或工具函数

## 前端开发规范

### React 最佳实践
- 使用函数组件和 Hooks
- 避免不必要的渲染 (使用 `useMemo`, `useCallback`)
- 正确使用依赖数组
- 分离状态逻辑和 UI 渲染

### TypeScript 使用
- 为所有导出的函数和组件定义类型
- 使用接口 (interface) 定义对象类型
- 避免使用 `any` 类型
- 使用类型断言时谨慎

### CSS 规范
- 使用 UnoCSS 原子类
- 遵循移动优先设计原则
- 避免行内样式和 !important
- 组件级样式应有明确前缀避免冲突

## 后端开发规范

### API 设计
- 遵循 RESTful 设计原则
- 统一响应格式
- 使用适当的 HTTP 状态码
- 处理所有错误情况

### 数据库操作
- 使用查询构建器或 ORM
- 事务处理关键操作
- 适当缓存频繁查询
- 避免 N+1 查询问题

### 安全实践
- 验证所有用户输入
- 正确处理身份验证和授权
- 敏感数据加密存储
- 防止常见安全漏洞 (XSS, CSRF 等)

## 性能优化

### 前端优化
- 组件懒加载和代码分割
- 图片和资源优化
- 减少不必要的重渲染

### 后端优化
- 数据缓存策略
- 异步处理长时间任务
- 限制并发请求






